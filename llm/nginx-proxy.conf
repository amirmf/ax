events {
    worker_connections 16;
}

http {
    proxy_ssl_server_name on;

    proxy_cache_path /server_cache levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=4d use_temp_path=off;

    log_format cache_log '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        'Cache: $upstream_cache_status';
                        
    resolver 127.0.0.11 valid=30s;
    resolver_timeout 5s;

    server {
        listen 80;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        # default endpoints (openai)
        location ~* ^\/v1\/((engines\/.+\/)?(?:chat\/completions|completions|edits|moderations|answers|embeddings))$ {
            proxy_set_header Host api.openai.com;
            proxy_pass https://api.openai.com;   
        }

        location /v1/(.*) {
            proxy_set_header Host api.openai.com;
            proxy_pass https://api.openai.com;
        }

        # provider specific endpoints
        location ~* ^/openai/(.*)?$  {
            proxy_set_header Host api.openai.com;
            proxy_pass https://api.openai.com/$1;
        }

        location ~* ^/openrouter/(.*)?$ {
            proxy_set_header Host openrouter.ai;
            proxy_pass https://openrouter.ai/api/$1;
            
        }

        location ~* ^/anthropic/(.*)?$ {
            proxy_set_header Host api.anthropic.com;
            proxy_pass https://api.anthropic.com/$1;
            
        }

        # !! endpoints bellow are untested !!
        location ~* ^/google/(.*)?$ {
            proxy_set_header Host generativelanguage.googleapis.com;
            proxy_pass https://generativelanguage.googleapis.com/v1beta/$1;
            
        }

        location ~* ^/cohere/(.*)?$ {
            proxy_set_header Host api.cohere.ai;
            proxy_pass https://api.cohere.ai/$1;
            
        }

        location ~* ^/ai21/(.*)?$ {
            proxy_set_header Host api.ai21.com;
            proxy_pass https://api.ai21.com/studio/$1;
            
        }

        location ~* ^/mistral/(.*)?$ {
            proxy_set_header Host api.mistral.ai;
            proxy_pass https://api.mistral.ai/$1;
            
        }
    }
}



# USE SSL CONFS

# server {
#     listen 80;
#     server_name openai-api.xxx.link;
#     error_log /var/log/nginx/openai-api/nginx-error.log;
#     access_log /var/log/nginx/openai-api/nginx-access.log main;
#     return 301 https://$host$request_uri;
# }

# server {
#     listen 443 ssl;
#     server_name openai-api.xxx.link;
#     error_log /var/log/nginx/openai-api/nginx-error-ssl.log;
#     access_log /var/log/nginx/openai-api/nginx-access-ssl.log main;

#     ssl_certificate /data/acme.sh/xxx.link/fullchain.cer;
#     ssl_certificate_key /data/acme.sh/xxx.link/bi83.link.key;
#     include /etc/nginx/ssl/options-ssl-nginx.conf;
#     ssl_dhparam /etc/nginx/ssl/ssl-dhparam.pem;

#     ignore_invalid_headers off;
#     client_max_body_size 0;
#     proxy_buffering off;

#     location /v1/audio/speech {
#             proxy_pass https://api.openai.com/v1/audio/speech;
#             proxy_ssl_name api.openai.com;
#             proxy_ssl_server_name on;
#             # Forward all headers
#             proxy_pass_request_headers on;
#             # proxy_http_version 1.1;
#     }

# }


# AN ALTERNATIVE CONF
# server {
# listen 80;
# server_name YOUR_DOMAIN_NAME;
# proxy_set_header Host api.openai.com;
# proxy_http_version 1.1;
# proxy_set_header Host $host;
# location ~* ^/v1/((engines/.+)?(? :chat {
# proxy_pass https://api.openai.com;
# proxy_set_header Authorization "Bearer OPENAI_API_KEY";
# proxy_set_header Content-Type "application/json";
# proxy_set_header Connection '';
# client_body_buffer_size 4m;
# }